@model SBurkeMIS4200.Models.Car

@{
    ViewBag.Title = "Edit Car";
}
<h2>Car</h2>
<div class="well">Edit Car</div>
<p>Editing Car Information <span class="glyphicon glyphicon-pencil"></span></p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.carId)

        <div class="form-group">
            @Html.LabelFor(model => model.make, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.make, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.make, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salesperson.salespersonFullName, "salespersonFullName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("salespersonId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.salespersonId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerCar.customerFullName, "customerFullName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("customerCarId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.customerCarId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
